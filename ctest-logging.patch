diff --git a/src/java/org/apache/cassandra/config/YamlConfigurationLoader.java b/src/java/org/apache/cassandra/config/YamlConfigurationLoader.java
index a8d4695cb0..849b4bdf80 100644
--- a/src/java/org/apache/cassandra/config/YamlConfigurationLoader.java
+++ b/src/java/org/apache/cassandra/config/YamlConfigurationLoader.java
@@ -234,12 +234,15 @@ public class YamlConfigurationLoader implements ConfigurationLoader
         {
             final Property result;
             Map<String, Replacement> typeReplacements = replacements.getOrDefault(type, Collections.emptyMap());
+            String ctestParam = name; //CTEST
+            logger.warn("[CTEST][TYPE] " + type.getName()); //CTEST
             if (typeReplacements.containsKey(name))
             {
                 Replacement replacement = typeReplacements.get(name);
                 final Property newProperty = super.getProperty(type, replacement.newName);
                 result = new Property(replacement.oldName, newProperty.getType())
                 {
+                    private final Logger clogger = LoggerFactory.getLogger(Property.class);
                     @Override
                     public Class<?>[] getActualTypeArguments()
                     {
@@ -250,11 +253,13 @@ public class YamlConfigurationLoader implements ConfigurationLoader
                     public void set(Object o, Object o1) throws Exception
                     {
                         newProperty.set(o, o1);
+                        logger.warn("[CTEST][SET-PARAM] " + ctestParam); //CTEST
                     }
 
                     @Override
                     public Object get(Object o)
                     {
+                        logger.warn("[CTEST][GET-PARAM] " + ctestParam + getStackTrace()); //CTEST
                         return newProperty.get(o);
                     }
 
@@ -294,6 +299,7 @@ public class YamlConfigurationLoader implements ConfigurationLoader
                         nullProperties.add(getName());
                     }
                     result.set(object, value);
+                    logger.warn("[CTEST][SET-PARAM] " + ctestParam); //CTEST
                 }
 
                 @Override
@@ -305,6 +311,7 @@ public class YamlConfigurationLoader implements ConfigurationLoader
                 @Override
                 public Object get(Object object)
                 {
+                    logger.warn("[CTEST][GET-PARAM] " + ctestParam + getStackTrace()); //CTEST
                     return result.get(object);
                 }
 
@@ -427,4 +434,15 @@ public class YamlConfigurationLoader implements ConfigurationLoader
             this.deprecated = deprecated;
         }
     }
+
+    // CTEST
+    private static String getStackTrace() {
+        String stacktrace = " ";
+        for (StackTraceElement element : Thread.currentThread().getStackTrace()) {
+            stacktrace = stacktrace.concat(
+                element.getClassName() + "#" + element.getMethodName() + "#" + element.getLineNumber() + "\t"
+            );
+        }
+        return stacktrace;
+    }
 }
